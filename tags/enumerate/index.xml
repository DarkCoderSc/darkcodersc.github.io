<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Enumerate on Phrozen</title>
    <link>https://www.phrozen.io/tags/enumerate/</link>
    <description>Recent content in Enumerate on Phrozen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 24 Mar 2020 14:29:21 +0100</lastBuildDate>
    
	<atom:link href="https://www.phrozen.io/tags/enumerate/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Enum Attached Files</title>
      <link>https://www.phrozen.io/docs/programming/windows/delphi/enum-attached-files/</link>
      <pubDate>Tue, 24 Mar 2020 14:29:21 +0100</pubDate>
      
      <guid>https://www.phrozen.io/docs/programming/windows/delphi/enum-attached-files/</guid>
      <description>Above snippet demonstrate how to enumerate files openned by running programs on Windows.
Some file unlocker use that technique to find where a specific file is attached and then force processes using that file to release it handle (via code injection techniques). I will write an example in a future snippet thread.
Notice: At the bottom of that page, you will see a concreate example about how to use that unit.</description>
    </item>
    
    <item>
      <title>Enum Modules Method 1</title>
      <link>https://www.phrozen.io/docs/programming/windows/delphi/enum-modules-method-1/</link>
      <pubDate>Thu, 12 Mar 2020 15:40:35 +0100</pubDate>
      
      <guid>https://www.phrozen.io/docs/programming/windows/delphi/enum-modules-method-1/</guid>
      <description>You will find below an example of how to enumerate process modules using the well known Windows API CreateToolHelp32Snapshot(), I will cover additional methods soon.
You may notice that when using CreateToolHelp32Snapshot(), first result (row) is generally the Image Path of the process owning module. I ignore that row by checking the value of szExePath with owner process image path.
GetProcessName() is compatible since Windows Vista. It is possible to support Windows XP and below but not in this example.</description>
    </item>
    
  </channel>
</rss>