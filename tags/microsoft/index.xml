<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microsoft on Phrozen</title>
    <link>https://www.phrozen.io/tags/microsoft/</link>
    <description>Recent content in Microsoft on Phrozen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 Mar 2020 19:56:33 +0100</lastBuildDate>
    
	<atom:link href="https://www.phrozen.io/tags/microsoft/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Winja (VirusTotal Uploader) - Binary</title>
      <link>https://www.phrozen.io/docs/windows/projects/freeware/winja/</link>
      <pubDate>Mon, 02 Mar 2020 19:56:33 +0100</pubDate>
      
      <guid>https://www.phrozen.io/docs/windows/projects/freeware/winja/</guid>
      <description>Winja is a free application for Microsoft Windows that lets you find potential malware on your system. It uses the scanning engine of virtually all antivirus products in the market to give you a very precise idea of the risk posed by a particular file.
Two concrete examples of using Winja:  You have downloaded a file from the Internet, you want to remove as many doubts as possible. Drag this file onto the main window and wait for the results that will appear on your desktop.</description>
    </item>
    
    <item>
      <title>EOF Reader (C&#43;&#43;)</title>
      <link>https://www.phrozen.io/docs/windows/projects/opensource/eof-reader/</link>
      <pubDate>Mon, 02 Mar 2020 17:18:20 +0100</pubDate>
      
      <guid>https://www.phrozen.io/docs/windows/projects/opensource/eof-reader/</guid>
      <description>EOF Reader is a tiny Visual C++ project designed to detect the presence of EOF (End Of File) data on both 32bit and 64bit valid Portable Executable Files.
After creating a similar project in Pascal/Delphi, I decided to port the code in C++.
Some Antivirus Software using similar technique to flag some Malware generically. There are very few if no legitimate reason at all to append data at the end of a PE File.</description>
    </item>
    
    <item>
      <title>Manipulation and Detection of EOF</title>
      <link>https://www.phrozen.io/docs/windows/snippets/delphi/eof/</link>
      <pubDate>Mon, 02 Mar 2020 12:21:49 +0100</pubDate>
      
      <guid>https://www.phrozen.io/docs/windows/snippets/delphi/eof/</guid>
      <description>Description This Delphi unit demonstrate how to manipulate EOF Data of a Valid Microsoft Windows Portable Executable (PE) File.
EOF (End Of File) is often used by Malware authors to offer their Malware users a way to edit Malware payload configuration (Ex: C2 informations) without having access to source code.
You often encounter such techniques in:
 Remote Access Tool/Trojan (RAT) File Wrapper / Binder Downloader Loader / Botnets  But not only.</description>
    </item>
    
  </channel>
</rss>